---
import { getCollection } from "astro:content";
import Blog from "../../layouts/Blog.astro";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
    const blogEntries = await getCollection("blog");
    return blogEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}
// 2. When it's time to render, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Blog title={entry.data.title}>
    <section class="container mx-auto space-y-4">
        <div class="flex gap-6">
            <img src={entry.data.image} alt="" class="h-36 aspect-square" />
            <span class="space-y-4">
                <h1 class="text-4xl font-black text-white">
                    {entry.data.title}
                </h1>
                <p class="flex items-center gap-2">
                    {
                        entry.data.tags.map((tag: string) => (
                            <span class="py-0.5 px-3 border rounded-full text-white text-xs uppercase opacity-60">
                                {tag}
                            </span>
                        ))
                    }
                </p>
            </span>
        </div>
        <div class="markdown-content space-y-4 py-8">
            <Content />
        </div>
    </section>
</Blog>

<style is:inline>
    @media (min-width: 800px) {
        .markdown-content iframe,
        .markdown-content pre {
            width: 120%;
            margin: 0 0 0 -10%;
        }
    }

    .markdown-content pre {
        padding: 1rem;
    }

    .markdown-content h2,
    .markdown-content h3 {
        font-size: 1.6rem;
        font-weight: 900;
        color: white;
    }

    .markdown-content h3 {
        font-size: 1.3rem;
    }

    .markdown-content p > code {
        background-color: #24292e;
        border-radius: 6px;
        margin: 0;
        padding: 0.2em 0.4em;
        font-size: 85%;
    }
</style>
