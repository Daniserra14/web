---
const { key, image, duration, title, subtitle, url, description } = Astro.props;

const parseDescription = (description: string) => {
  // replace text in ** with <strong>
  return description.replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>");
};
---

<a href={url} target="_blank" class="group hover:bg-black/10 p-4">
  {
    image && (
      <div class="flex justify-center">
        <img
          src={image}
          alt={title}
          class="h-80 object-contain aspect-square"
        />
      </div>
    )
  }
  <div class={`relative space-y-2 ${duration ? "pt-10" : ""} text-center`}>
    {
      duration && (
        <span class="back absolute top-0 left-1/2 -translate-x-1/2 opacity-10 group-hover:opacity-20">
          {duration || "_"}
        </span>
      )
    }
    <h4 class="title">
      {title}
    </h4>
    {subtitle && <p class="text-primary text-lg leading-none">{subtitle}</p>}
    {
      description && (
        <p
          class="text-white/70 group-hover:text-white transition-all"
          set:html={parseDescription(description)}
        />
      )
    }
  </div>
</a>

<style define:vars={{ key }}>
  a {
    display: flex;
    flex-direction: column;
    max-width: 100%;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeup 0.7s ease;
    animation-fill-mode: forwards;
    animation-delay: calc(var(--key) * 0.3s);
  }

  .back {
    font-size: 70px;
    line-height: 70px;
    font-weight: 900;
    white-space: nowrap;
    transition: all 0.3s ease;
    z-index: -1;
  }

  .title {
    font-size: 2em;
    line-height: 1em;
    font-weight: 900;
    color: white;
  }
</style>
